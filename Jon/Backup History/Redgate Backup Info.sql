SET NOCOUNT ON;
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

USE MSDB; 
/************************
Declare Variables
************************/
DECLARE @BACKUP_DATE DATETIME
DECLARE @DATABASENAME VARCHAR(100) 
DECLARE @MAX_BACKUP_SET_ID INT 
DECLARE @LOGICAL_DEVICE_NAME NVARCHAR(128)
DECLARE @ITEM_COUNTER INT
DECLARE @LOOP_COUNTER INT
DECLARE @REDGATE TINYINT  
DECLARE @BACKUP_SET_UUID VARCHAR(100) 
DECLARE @SQLSTATEMENT_COPY VARCHAR(1000) 

/************************
Set Variables
************************/
SET @BACKUP_DATE = (SELECT DATEADD(d,-14,GETDATE()))
SET @DATABASENAME = 'GOTHAMCOMP' 

/************************
Declare Variable Tables
************************/
DECLARE @MSDB_BACKUP_INFO TABLE ( 
	ID INT IDENTITY(1,1)
	,[MSDB_MEDIA_SET_ID] INT  
	,[BACKUP_SET_UUID] UNIQUEIDENTIFIER 
	,[DATABASE_NAME] VARCHAR(100) 
	,[SERVER_NAME] VARCHAR(100) 
	,[USER_NAME] VARCHAR(30) 
	,[LOGICAL_DEVICE_NAME] NVARCHAR(128)  
	,[PHYSICAL_DEVICE_NAME] NVARCHAR(260)  
	,[DEVICE_TYPE] TINYINT 
	,[BACKUP_START_DATE] DATETIME 
	,[BACKUP_FINISH_DATE] DATETIME 
	,[TYPE] VARCHAR(1) 
	,[BACKUP_SIZE] BIGINT 
	,[COMPRESSED_BACKUP_SIZE] BIGINT
	) 

DECLARE @REDGATE_BACKUP_INFO TABLE ( 
	[REDGATE_ID] INT 
	,[BACKUP_SET_UUID] UNIQUEIDENTIFIER 
	,[BACKUP_START] DATETIME 
	,[BACKUP_END] DATETIME 
	,[BACKUP_TYPE] VARCHAR(1) 
	,[DATABASE_NAME] VARCHAR(100) 
	,[ENCRYPTION] TINYINT 
	,[COMPRESSION_RATIO] REAL 
	,[COMPRESSION_LEVEL] TINYINT 
	,[SIZE] BIGINT 
	,[COMPRESSED_SIZE] BIGINT 
	,[SPEED] REAL 
	,[FILE_COUNT] TINYINT 
	,[USER_NAME] VARCHAR(30) 
	,[LOGFILENAME] VARCHAR(200) 
	,[BACKUP_LOCATION] VARCHAR(200) 
	,[COPY_LOCATION] VARCHAR(200) 
	) 

DECLARE @COPY TABLE (
	FILE_TYPE CHAR(2)
	) 

DECLARE @FINAL_TABLE TABLE ( 
	[MSDB_MEDIA_SET_ID] INT  
	,[REDGATE_ID] INT 
	,[SERVER_NAME] VARCHAR(100) 
	,[DATABASE_NAME] VARCHAR(100) 
	,[USER_NAME] VARCHAR(30) 
	,[LOGICAL_DEVICE_NAME] VARCHAR(128)  
	,[BACKUP_START_DATE] DATETIME 
	,[BACKUP_FINISH_DATE] DATETIME 
	,[COPY_START] DATETIME 
	,[COPY_END] DATETIME 
	,[BACKUP_DURATION_MINS] INT 
	,[COPY_DURATION_MINS] INT 
	,[TOTAL_DURATION_MINS] INT 
	,[BACKUP_TYPE] VARCHAR(12) 
	,[DATABASE_SIZE_MB] BIGINT 
	,[NATIVE_BACKUP_SIZE_MB] BIGINT 
	,[NATIVE_COMPRESSED_BACKUP_SIZE_MB] BIGINT
	,[COMPRESSED_SIZE_MB] BIGINT 
	,[COMPRESSION_RATIO] REAL 
	,[COMPRESSION_LEVEL] TINYINT 
	,[FINAL_BACKUP_SIZE_MB] BIGINT
	,[BACKUP_LOCATION] VARCHAR(260)  
	,[BACKUP_COPY_LOCATION] VARCHAR(260) 
	,[ENCRYPTION] TINYINT 
	,[LOGFILENAME] VARCHAR(200) 
	) 

/************************
Select Backups 
************************/
IF (SELECT LEFT(CONVERT(VARCHAR(20), SERVERPROPERTY('ProductVersion')) ,2)) IN ('9.' , '8.')
BEGIN 
	INSERT INTO @MSDB_BACKUP_INFO  ([MSDB_MEDIA_SET_ID]   
	,[BACKUP_SET_UUID]  
	,[DATABASE_NAME] 
	,[SERVER_NAME]  
	,[USER_NAME]  
	,[LOGICAL_DEVICE_NAME]   
	,[PHYSICAL_DEVICE_NAME] 
	,[DEVICE_TYPE]  
	,[BACKUP_START_DATE]  
	,[BACKUP_FINISH_DATE]  
	,[TYPE]  
	,[BACKUP_SIZE] 
)
	SELECT  DISTINCT  
	A.[MEDIA_SET_ID] 
	,B.[BACKUP_SET_UUID] 
	,B.[DATABASE_NAME] 
	,B.[SERVER_NAME] 
	,B.[USER_NAME] 
	,A.[LOGICAL_DEVICE_NAME] 
	,A.[PHYSICAL_DEVICE_NAME] 
	,A.[DEVICE_TYPE] 
	,B.[BACKUP_START_DATE] 
	,B.[BACKUP_FINISH_DATE] 
	,B.[TYPE] 
	,B.[BACKUP_SIZE] 
	FROM MSDB.dbo.backupmediafamily A 
	JOIN MSDB.dbo.backupset B 
	ON A.MEDIA_SET_ID = B.MEDIA_SET_ID 
	WHERE B.[DATABASE_NAME] = @DATABASENAME
	AND [BACKUP_START_DATE] > @BACKUP_DATE
	ORDER BY A.MEDIA_SET_ID DESC 
END 
ELSE
BEGIN 
	INSERT INTO @MSDB_BACKUP_INFO
	EXEC (
	' 
	SELECT  DISTINCT  
	A.[MEDIA_SET_ID] 
	,B.[BACKUP_SET_UUID] 
	,B.[DATABASE_NAME] 
	,B.[SERVER_NAME] 
	,B.[USER_NAME] 
	,A.[LOGICAL_DEVICE_NAME] 
	,A.[PHYSICAL_DEVICE_NAME] 
	,A.[DEVICE_TYPE] 
	,B.[BACKUP_START_DATE] 
	,B.[BACKUP_FINISH_DATE] 
	,B.[TYPE] 
	,B.[BACKUP_SIZE] 
	,B.[COMPRESSED_BACKUP_SIZE]
	FROM MSDB.dbo.backupmediafamily A 
	JOIN MSDB.dbo.backupset B 
	ON A.MEDIA_SET_ID = B.MEDIA_SET_ID 
	WHERE B.[DATABASE_NAME] = '''+@DATABASENAME+'''
	AND [BACKUP_START_DATE] > CONVERT(VARCHAR(25),'''+@BACKUP_DATE+''',121)
	ORDER BY A.MEDIA_SET_ID DESC ')	
END 

SET @LOOP_COUNTER = (SELECT COUNT(1) FROM @MSDB_BACKUP_INFO)
SET @ITEM_COUNTER = 1

WHILE @LOOP_COUNTER > 0 AND @ITEM_COUNTER <= @LOOP_COUNTER
BEGIN
	SELECT 
		@MAX_BACKUP_SET_ID = MSDB_MEDIA_SET_ID,
		@LOGICAL_DEVICE_NAME = LOGICAL_DEVICE_NAME
	FROM @MSDB_BACKUP_INFO
	WHERE ID = @ITEM_COUNTER
	
	IF (SELECT @LOGICAL_DEVICE_NAME) LIKE 'RED GATE%' 
	BEGIN 
		GOTO REDGATE_BACKUP_QUERY 
	END 
	ELSE  
	BEGIN 
		GOTO FINAL_QUERY 
	END 
	/*********************************** 
	RUN REDGATE QUERIES 
	***********************************/ 
	REDGATE_BACKUP_QUERY: 
	
	SET @REDGATE = 1 
	SET @BACKUP_SET_UUID = (SELECT BACKUP_SET_UUID FROM MSDB.dbo.backupset WHERE MEDIA_SET_ID = @MAX_BACKUP_SET_ID) 

	SET @SQLSTATEMENT_COPY = (' 
	SELECT 
	B.FILE_TYPE  
	FROM BACKUPHISTORY A 
	JOIN BACKUPFILES B 
	ON A.ID = B.BACKUP_ID 
	WHERE B.FILE_TYPE = ''C'' 
	AND A.BACKUP_SET_UUID = ''{'+@BACKUP_SET_UUID+'}''
	ORDER BY A.ID DESC  
	') 
	INSERT INTO @COPY 
	EXECUTE MASTER..SQBDATA @SQLSTATEMENT_COPY 

	IF (SELECT COUNT(1) FROM @COPY) = 0 
	BEGIN 
		DECLARE @SQLSTATEMENT VARCHAR(1000) 
		SET @SQLSTATEMENT = (' 
		SELECT  
		A.ID 
		,A.BACKUP_SET_UUID 
		,A.BACKUP_START 
		,A.BACKUP_END 
		,A.BACKUP_TYPE 
		,A.DBNAME 
		,A.ENCRYPTION 
		,A.COMPRESSION_RATIO 
		,A.COMPRESSION_LEVEL 
		,A.SIZE 
		,A.COMPRESSED_SIZE 
		,A.SPEED 
		,A.FILE_COUNT 
		,A.USER_NAME 
		,A.LOGFILENAME 
		,CASE WHEN B.FILE_TYPE =''P'' THEN B.NAME END AS BACKUP_LOCATION 
		,CASE WHEN C.FILE_TYPE =''C'' THEN C.NAME END AS COPY_LOCATION 
		FROM BACKUPHISTORY A 
		JOIN BACKUPFILES B 
			ON A.ID = B.BACKUP_ID 
		JOIN BACKUPFILES C 
			ON A.ID = C.BACKUP_ID 
			AND B.SIZE = C.SIZE 
			AND B.COMPRESSED_SIZE = C.COMPRESSED_SIZE 
		WHERE B.FILE_TYPE = ''P'' 
		AND A.BACKUP_SET_UUID = ''{'+@BACKUP_SET_UUID+'}''
		ORDER BY A.ID DESC  
		') 
		INSERT INTO @REDGATE_BACKUP_INFO 
		EXECUTE MASTER..SQBDATA @SQLSTATEMENT 

	END ELSE 
	BEGIN 
		SET @SQLSTATEMENT = (' 
		SELECT  
		A.ID 
		,A.BACKUP_SET_UUID 
		,A.BACKUP_START 
		,A.BACKUP_END 
		,A.BACKUP_TYPE 
		,A.DBNAME 
		,A.ENCRYPTION 
		,A.COMPRESSION_RATIO 
		,A.COMPRESSION_LEVEL 
		,A.SIZE 
		,A.COMPRESSED_SIZE 
		,A.SPEED 
		,A.FILE_COUNT 
		,A.USER_NAME 
		,A.LOGFILENAME 
		,CASE WHEN B.FILE_TYPE =''P'' THEN B.NAME END AS BACKUP_LOCATION 
		,CASE WHEN C.FILE_TYPE =''C'' THEN C.NAME END AS COPY_LOCATION 
		FROM BACKUPHISTORY A 
		JOIN BACKUPFILES B 
			ON A.ID = B.BACKUP_ID 
		JOIN BACKUPFILES C 
			ON A.ID = C.BACKUP_ID 
			AND B.SIZE = C.SIZE 
			AND B.COMPRESSED_SIZE = C.COMPRESSED_SIZE 
		WHERE B.FILE_TYPE = ''P'' 
		AND C.FILE_TYPE = ''C'' 
		AND A.BACKUP_SET_UUID = ''{'+@BACKUP_SET_UUID+'}''
		ORDER BY A.ID DESC  
		') 
		INSERT INTO @REDGATE_BACKUP_INFO 
		EXECUTE MASTER..SQBDATA @SQLSTATEMENT 
	END  

	GOTO FINAL_QUERY 
	/*********************************** 
	FINAL QUERY 
	***********************************/ 
	FINAL_QUERY: 
	
	IF @REDGATE = 1 
	BEGIN 
		INSERT INTO @FINAL_TABLE (	[MSDB_MEDIA_SET_ID]   
	,[REDGATE_ID]  
	,[SERVER_NAME] 
	,[DATABASE_NAME] 
	,[USER_NAME]  
	,[LOGICAL_DEVICE_NAME] 
	,[BACKUP_START_DATE]  
	,[BACKUP_FINISH_DATE]  
	,[COPY_START]  
	,[COPY_END]  
	,[BACKUP_DURATION_MINS]  
	,[COPY_DURATION_MINS]  
	,[TOTAL_DURATION_MINS]  
	,[BACKUP_TYPE]  
	,[DATABASE_SIZE_MB]  
	,[NATIVE_BACKUP_SIZE_MB]  
	,[COMPRESSED_SIZE_MB]  
	,[COMPRESSION_RATIO]  
	,[COMPRESSION_LEVEL]  
	,[BACKUP_LOCATION] 
	,[BACKUP_COPY_LOCATION] 
	,[ENCRYPTION] 
	,[LOGFILENAME])
		SELECT  
		A.[MSDB_MEDIA_SET_ID] 
		,B.[REDGATE_ID] 
		,A.[SERVER_NAME] 
		,A.[DATABASE_NAME] 
		,A.[USER_NAME] 
		,CASE WHEN A.[LOGICAL_DEVICE_NAME] LIKE 'Red Gate%' THEN 'REDGATE' END  
		,A.[BACKUP_START_DATE] 
		,A.[BACKUP_FINISH_DATE] 
		,CASE WHEN B.[COPY_LOCATION] IS NOT NULL THEN A.[BACKUP_FINISH_DATE] END AS COPY_START 
		,CASE WHEN B.[COPY_LOCATION] IS NOT NULL THEN B.[BACKUP_END] END AS COPY_END 
		,DATEDIFF(MI,A.[BACKUP_START_DATE],A.[BACKUP_FINISH_DATE])  AS [BACKUP_DURATION] 
		,CASE WHEN B.[COPY_LOCATION] IS NOT NULL THEN DATEDIFF(MI,A.[BACKUP_FINISH_DATE],B.[BACKUP_END]) END AS [COPY_DURATION] 
		,CASE WHEN B.[COPY_LOCATION] IS NOT NULL THEN DATEDIFF(MI,A.[BACKUP_START_DATE],B.[BACKUP_END])END  AS [TOTAL_DURATION] 
		,CASE WHEN B.[BACKUP_TYPE] = 'L' THEN 'LOG' 
			WHEN B.[BACKUP_TYPE] = 'D' THEN 'FULL' 
			WHEN B.[BACKUP_TYPE] = 'I' THEN 'DIFFERENTIAL' 
			ELSE B.[BACKUP_TYPE] 
			END AS [BACKUP_TYPE] 
		,B.[SIZE] /1024 /1024  
		,A.[BACKUP_SIZE] /1024 / 1024  
		,B.[COMPRESSED_SIZE] /1024 /1024  
		,B.[COMPRESSION_RATIO] 
		,B.[COMPRESSION_LEVEL] 
		,A.[PHYSICAL_DEVICE_NAME] AS BACKUP_LOCATION 
		,B.[COPY_LOCATION] AS BACKUP_COPY_LOCATION 
		,B.[ENCRYPTION] 
		,B.[LOGFILENAME] 
		FROM @MSDB_BACKUP_INFO A 
		JOIN @REDGATE_BACKUP_INFO B 
		ON A.BACKUP_SET_UUID = B.BACKUP_SET_UUID 
		AND A.[PHYSICAL_DEVICE_NAME] = B.BACKUP_LOCATION 
		WHERE A.ID = @ITEM_COUNTER
	END  
	ELSE
	BEGIN
		INSERT INTO @FINAL_TABLE ([MSDB_MEDIA_SET_ID],[SERVER_NAME],[DATABASE_NAME],[USER_NAME],[LOGICAL_DEVICE_NAME], 
		[BACKUP_START_DATE],[BACKUP_FINISH_DATE],[BACKUP_DURATION_MINS],[BACKUP_TYPE],[NATIVE_BACKUP_SIZE_MB],[NATIVE_COMPRESSED_BACKUP_SIZE_MB],[BACKUP_LOCATION]) 
		SELECT  
		A.[MSDB_MEDIA_SET_ID] 
		,A.[SERVER_NAME] 
		,A.[DATABASE_NAME] 
		,A.[USER_NAME] 
		,CASE WHEN A.[LOGICAL_DEVICE_NAME] IS NULL THEN 'Native SQL' END  
		,A.[BACKUP_START_DATE] 
		,A.[BACKUP_FINISH_DATE] 
		,DATEDIFF(MI,A.[BACKUP_START_DATE],A.[BACKUP_FINISH_DATE]) AS [BACKUP_DURATION] 
		,CASE WHEN A.[TYPE] = 'L' THEN 'LOG' 
			WHEN A.[TYPE] = 'D' THEN 'FULL' 
			WHEN A.[TYPE] = 'I' THEN 'DIFFERENTIAL' 
			ELSE A.[TYPE] 
			END AS [BACKUP_TYPE] 
		,A.[BACKUP_SIZE]  /1024 /1024  
		,[COMPRESSED_BACKUP_SIZE] /1024 /1024
		,A.[PHYSICAL_DEVICE_NAME]  
		FROM @MSDB_BACKUP_INFO A 
		WHERE A.ID = @ITEM_COUNTER
	END
 	
	GOTO END_ 
	/*********************************** 
	END 
	***********************************/ 
	END_: 
	
	SET @ITEM_COUNTER = @ITEM_COUNTER + 1
END

SELECT 
	[MSDB_MEDIA_SET_ID]   
	,[REDGATE_ID]  
	,[SERVER_NAME] 
	,[DATABASE_NAME] 
	,[USER_NAME]  
	,[LOGICAL_DEVICE_NAME] 
	,[BACKUP_START_DATE]  
	,[BACKUP_FINISH_DATE]  
	,[COPY_START]  
	,[COPY_END]  
	,[BACKUP_DURATION_MINS]  
	,[COPY_DURATION_MINS]  
	,[TOTAL_DURATION_MINS]  
	,[BACKUP_TYPE]  
	,[DATABASE_SIZE_MB]  
	,[NATIVE_BACKUP_SIZE_MB]  
	,[NATIVE_COMPRESSED_BACKUP_SIZE_MB]
	,[COMPRESSED_SIZE_MB]  
	,[COMPRESSION_RATIO]  
	,[COMPRESSION_LEVEL]  
	,CASE 
		WHEN [COMPRESSED_SIZE_MB] IS NULL 
		THEN [NATIVE_COMPRESSED_BACKUP_SIZE_MB]
		ELSE [COMPRESSED_SIZE_MB]
	END AS [FINAL_BACKUP_SIZE_MB]
	,[BACKUP_LOCATION] 
	,[BACKUP_COPY_LOCATION] 
	,[ENCRYPTION] 
	,[LOGFILENAME]
FROM @FINAL_TABLE 
--WHERE [BACKUP_TYPE] = 'FULL' 
ORDER BY [MSDB_MEDIA_SET_ID] DESC